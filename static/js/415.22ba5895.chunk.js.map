{"version":3,"file":"static/js/415.22ba5895.chunk.js","mappings":"kNAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAe,mCAAG,yGAAOC,EAAP,+BAAsB,sBAAtB,SACNF,EAAAA,EAAAA,IAAUE,EAAc,CAC7CC,OAAQ,CACNC,QAASL,KAHgB,cACvBM,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,oD,oIC2C5B,UA5Ca,WACX,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAsBjB,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAAS,mCAAG,oGAEdN,GAAa,GAFC,UAGIV,EAAAA,EAAAA,KAHJ,OAGRiB,EAHQ,OAIdT,EAAcS,EAAIC,SAJJ,gDAMdC,QAAQC,IAAI,KAAMC,SANJ,yBAQdX,GAAa,GARC,4EAAH,qDAaf,OADAM,IACO,WACLF,EAAWQ,OACZ,CACF,GAAE,KAGD,8BACIb,GAWA,SAAC,IAAD,KAVA,wBACGF,EAAWgB,KAAI,SAAAC,GAAK,OACnB,yBACE,UAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMjB,GAA/C,UACGa,EAAMK,MAAO,QAFTL,EAAME,GADI,OAa9B,C","sources":["axios.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b769d525e1ad4eef01b48a7fe3c818d0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchMoviesData = async (searchParams = '/trending/movie/day') => {\n  const response = await axios.get(searchParams, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMoviesData } from '../axios';\nimport { Link, useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader';\n\nconst Home = () => {\n  const [moviesData, setMoviesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const res = await fetchMoviesData();\n        setMoviesData(res.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <>\n      {!isLoading ? (\n        <ul>\n          {moviesData.map(movie => (\n            <li key={movie.id}>\n              <Link to={`movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}{' '}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","axios","fetchMoviesData","searchParams","params","api_key","response","data","useState","moviesData","setMoviesData","isLoading","setIsLoading","location","useLocation","useEffect","controller","AbortController","fetchData","res","results","console","log","message","abort","map","movie","to","id","state","from","title"],"sourceRoot":""}