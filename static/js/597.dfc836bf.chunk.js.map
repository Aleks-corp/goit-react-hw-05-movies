{"version":3,"file":"static/js/597.dfc836bf.chunk.js","mappings":"kNAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAe,mCAAG,yGAAOC,EAAP,+BAAsB,sBAAtB,SACNF,EAAAA,EAAAA,IAAUE,EAAc,CAC7CC,OAAQ,CACNC,QAASL,KAHgB,cACvBM,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,oD,oIC4D5B,UA5Da,WACX,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAoBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAAS,mCAAG,oGAEdJ,GAAa,GAFC,UAGIZ,EAAAA,EAAAA,GAAgB,UAAD,OAAWM,EAAX,aAHnB,OAGRW,EAHQ,OAIdP,EAAQO,EAAIR,MAJE,gDAMdS,QAAQC,IAAI,KAAMC,SANJ,yBAQdR,GAAa,GARC,4EAAH,qDAYf,OADAI,IACO,WACLF,EAAWO,OACZ,CACF,GAAE,CAACf,KAGF,yBACIK,GA6BA,SAAC,IAAD,KA5BA,SAAC,KAAD,UACmB,IAAhBF,EAAKa,OACJb,EAAKc,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACP,UAAC,KAAD,WACGA,GACC,gBACEC,MAAM,MACNC,IAAG,6CAAwCF,GAC3CG,IAAKL,KAGP,gBACEG,MAAM,MACNC,IAAI,+EACJC,IAAKL,KAGT,SAAC,KAAD,UAAQA,KACR,UAAC,KAAD,YACE,4BAAQ,eAAmB,IAAEC,OAhBpBnB,EADN,KAsBT,uBAAG,6CAQd,C,yLC9DYwB,EAAYC,EAAAA,GAAAA,GAAH,2GAMTC,EAASD,EAAAA,GAAAA,GAAH,6LAUNE,EAAWF,EAAAA,GAAAA,GAAH,iKASRG,EAAQH,EAAAA,GAAAA,EAAH,+CAILI,EAAOJ,EAAAA,GAAAA,EAAH,gE","sources":["axios.js","components/Cast.jsx","components/CastReviews.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b769d525e1ad4eef01b48a7fe3c818d0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchMoviesData = async (searchParams = '/trending/movie/day') => {\n  const response = await axios.get(searchParams, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n};\n","import { fetchMoviesData } from '../axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, LiCast, Title } from 'components/CastReviews.styled';\nimport Loader from './Loader';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const res = await fetchMoviesData(`/movie/${id}/credits`);\n        setCast(res.cast);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [id]);\n\n  return (\n    <div>\n      {!isLoading ? (\n        <Container>\n          {cast.length !== 0 ? (\n            cast.map(({ id, name, character, profile_path }) => (\n              <LiCast key={id}>\n                {profile_path ? (\n                  <img\n                    width=\"100\"\n                    src={`https://image.tmdb.org/t/p/original${profile_path}`}\n                    alt={name}\n                  />\n                ) : (\n                  <img\n                    width=\"100\"\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"\n                    alt={name}\n                  />\n                )}\n                <Title>{name}</Title>\n                <Title>\n                  <strong>Character:</strong> {character}\n                </Title>\n              </LiCast>\n            ))\n          ) : (\n            <p>We don't have any cast for this movie</p>\n          )}\n        </Container>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 150px);\n  gap: 10px;\n`;\n\nexport const LiCast = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  list-style: none;\n  padding-top: 10px;\n  border: 1px solid #999999;\n  border-radius: 5px;\n`;\n\nexport const LiReview = styled.li`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  padding: 10px;\n  border: 1px solid #999999;\n  border-radius: 5px;\n`;\n\nexport const Title = styled.p`\n  text-align: center;\n`;\n\nexport const Name = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n"],"names":["API_KEY","axios","fetchMoviesData","searchParams","params","api_key","response","data","id","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","controller","AbortController","fetchData","res","console","log","message","abort","length","map","name","character","profile_path","width","src","alt","Container","styled","LiCast","LiReview","Title","Name"],"sourceRoot":""}